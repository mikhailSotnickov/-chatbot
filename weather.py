import requests

weather_api = 'a0b60fdadbff75ee2e48ebb59ab78815'  # –∞–ø–∏ —Å openweathermap –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã


def simple_weather(user, bot, message):

    try:
        res = requests.get("http://api.openweathermap.org/data/2.5/find",
                           params={'lat': user.location.latitude, 'lon': user.location.longitude,
                                   'units': 'metric', 'lang': 'ru', 'APPID': weather_api})
        data = res.json()
        weather = data['list'][0]

        res2 = requests.get("http://api.openweathermap.org/data/2.5/weather",
                           params={'lat': user.location.latitude, 'lon': user.location.longitude,
                                   'units': 'metric', 'lang': 'ru', 'APPID': weather_api})
        data2 = res2.json()

        emojis = ''
        if weather["rain"] is not None:
            emojis += 'üåßÔ∏è'
        if weather["snow"] is not None:
            emojis += '‚ùÑÔ∏èÔ∏è'
        if weather["clouds"] is not None:
            emojis += '‚òÅÔ∏èÔ∏èÔ∏è'

        response = [
            f'_–ü–æ–≥–æ–¥–∞ –≤ —Ä–∞–π–æ–Ω–µ {data2["name"]}_\n\n',
            f'{weather["weather"][0]["description"].capitalize()} {emojis}\n\n',
            f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞         *{weather["main"]["temp"]}* ‚ÑÉ\n',
            f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫    *{weather["main"]["feels_like"]}* ‚ÑÉ\n'
        ]

        bot.send_message(message.chat.id, ''.join(response), parse_mode='Markdown')

    except Exception as e:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞')
        print("Exception (find):", e)
        pass


def detailed_weather(user, bot, message):
    try:
        res = requests.get("http://api.openweathermap.org/data/2.5/find",
                           params={'lat': user.location.latitude, 'lon': user.location.longitude,
                                   'units': 'metric', 'lang': 'ru', 'APPID': weather_api})
        data = res.json()
        weather = data['list'][0]

        res2 = requests.get("http://api.openweathermap.org/data/2.5/weather",
                            params={'lat': user.location.latitude, 'lon': user.location.longitude,
                                    'units': 'metric', 'lang': 'ru', 'APPID': weather_api})
        data2 = res2.json()

        emojis = ''
        if weather["rain"] is not None:
            emojis += 'üåßÔ∏è'
        if weather["snow"] is not None:
            emojis += '‚ùÑÔ∏èÔ∏è'
        if weather["clouds"] is not None:
            emojis += '‚òÅÔ∏èÔ∏èÔ∏è'

        response = [
            f'_–ü–æ–≥–æ–¥–∞ –≤ —Ä–∞–π–æ–Ω–µ {data2["name"]}_\n\n',
            f'{weather["weather"][0]["description"].capitalize()} {emojis}\n\n',
            f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ *{weather["main"]["temp"]}* ‚ÑÉ\n',
            f'(–æ—Ç *{weather["main"]["temp_min"]}* –¥–æ *{weather["main"]["temp_max"]}* ‚ÑÉ)\n',
            f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫    *{weather["main"]["feels_like"]}* ‚ÑÉ\n\n'
            f'–î–∞–≤–ª–µ–Ω–∏–µ             *{weather["main"]["pressure"]}* –≥–ü–∞\n'
            f'–í–ª–∞–∂–Ω–æ—Å—Ç—å            *{weather["main"]["humidity"]}* %\n'
            f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞   *{weather["wind"]["speed"]}* –º/—Å\n'
        ]

        bot.send_message(message.chat.id, ''.join(response), parse_mode='Markdown')

    except Exception as e:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞')
        print("Exception (find):", e)
        pass


def weekly_weather(user, bot, message):
    pass


